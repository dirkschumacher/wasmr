// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "wasmr_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// wasm_init_module
SEXP wasm_init_module();
RcppExport SEXP _wasmr_wasm_init_module() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(wasm_init_module());
    return rcpp_result_gen;
END_RCPP
}
// wasm_finalize_module
void wasm_finalize_module(Rcpp::XPtr<wasmr::RcppWasmModule> module);
RcppExport SEXP _wasmr_wasm_finalize_module(SEXP moduleSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    wasm_finalize_module(module);
    return R_NilValue;
END_RCPP
}
// wasm_instantiate
void wasm_instantiate(Rcpp::XPtr<wasmr::RcppWasmModule> module, Rcpp::RawVector bytes, Rcpp::List imports);
RcppExport SEXP _wasmr_wasm_instantiate(SEXP moduleSEXP, SEXP bytesSEXP, SEXP importsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    Rcpp::traits::input_parameter< Rcpp::RawVector >::type bytes(bytesSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type imports(importsSEXP);
    wasm_instantiate(module, bytes, imports);
    return R_NilValue;
END_RCPP
}
// wasm_call_exported_function
Rcpp::List wasm_call_exported_function(Rcpp::XPtr<wasmr::RcppWasmModule> module, std::string fun_name, Rcpp::List arguments);
RcppExport SEXP _wasmr_wasm_call_exported_function(SEXP moduleSEXP, SEXP fun_nameSEXP, SEXP argumentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    Rcpp::traits::input_parameter< std::string >::type fun_name(fun_nameSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type arguments(argumentsSEXP);
    rcpp_result_gen = Rcpp::wrap(wasm_call_exported_function(module, fun_name, arguments));
    return rcpp_result_gen;
END_RCPP
}
// wasm_get_exported_functions
Rcpp::List wasm_get_exported_functions(Rcpp::XPtr<wasmr::RcppWasmModule> module);
RcppExport SEXP _wasmr_wasm_get_exported_functions(SEXP moduleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    rcpp_result_gen = Rcpp::wrap(wasm_get_exported_functions(module));
    return rcpp_result_gen;
END_RCPP
}
// wasm_get_memory_length
uint32_t wasm_get_memory_length(Rcpp::XPtr<wasmr::RcppWasmModule> module);
RcppExport SEXP _wasmr_wasm_get_memory_length(SEXP moduleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    rcpp_result_gen = Rcpp::wrap(wasm_get_memory_length(module));
    return rcpp_result_gen;
END_RCPP
}
// wasm_get_memory_view
Rcpp::RawVector wasm_get_memory_view(Rcpp::XPtr<wasmr::RcppWasmModule> module, int32_t pointer);
RcppExport SEXP _wasmr_wasm_get_memory_view(SEXP moduleSEXP, SEXP pointerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    Rcpp::traits::input_parameter< int32_t >::type pointer(pointerSEXP);
    rcpp_result_gen = Rcpp::wrap(wasm_get_memory_view(module, pointer));
    return rcpp_result_gen;
END_RCPP
}
// wasm_grow_memory
void wasm_grow_memory(Rcpp::XPtr<wasmr::RcppWasmModule> module, uint32_t delta);
RcppExport SEXP _wasmr_wasm_grow_memory(SEXP moduleSEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<wasmr::RcppWasmModule> >::type module(moduleSEXP);
    Rcpp::traits::input_parameter< uint32_t >::type delta(deltaSEXP);
    wasm_grow_memory(module, delta);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_wasmr_wasm_init_module", (DL_FUNC) &_wasmr_wasm_init_module, 0},
    {"_wasmr_wasm_finalize_module", (DL_FUNC) &_wasmr_wasm_finalize_module, 1},
    {"_wasmr_wasm_instantiate", (DL_FUNC) &_wasmr_wasm_instantiate, 3},
    {"_wasmr_wasm_call_exported_function", (DL_FUNC) &_wasmr_wasm_call_exported_function, 3},
    {"_wasmr_wasm_get_exported_functions", (DL_FUNC) &_wasmr_wasm_get_exported_functions, 1},
    {"_wasmr_wasm_get_memory_length", (DL_FUNC) &_wasmr_wasm_get_memory_length, 1},
    {"_wasmr_wasm_get_memory_view", (DL_FUNC) &_wasmr_wasm_get_memory_view, 2},
    {"_wasmr_wasm_grow_memory", (DL_FUNC) &_wasmr_wasm_grow_memory, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_wasmr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
